apache_arrow_repository = ENV["APACHE_ARROW_REPOSITORY"]
if apache_arrow_repository.nil?
  raise "Specify APACHE_ARROW_REPOSITORY environment variable"
end
require "#{apache_arrow_repository}/dev/tasks/linux-packages/package-task"

ENV["APT_TARGETS"] ||= "debian-stretch,debian-stretch-i386,debian-buster,debian-buster-i386"
ENV["YUM_TARGETS"] ||= "centos-6,centos-7"

class GroongaPackageTask < PackageTask
  def initialize(apache_arrow_repository)
    @apache_arrow_repository = apache_arrow_repository
    version = "9.0.8"
    super("groonga", version, nil)
    @archive_name = "groonga-#{version}.tar.gz"
    @original_archive_name = @archive_name
  end

  def define
    super
    define_apt_build_sh_task
    define_apt_keyring_build_sh_task
    define_yum_build_sh_task
  end

  private
  def define_archive_task
    file @original_archive_name do
      File.symlink("../#{@original_archive_name}",
                   @original_archive_name)
    end
  end

  def define_apt_build_sh_task
    apache_arrow_apt_build_sh =
      File.join(@apache_arrow_repository,
                "dev",
                "tasks",
                "linux-packages",
                "apt",
                "build.sh")
    apt_build_sh = File.join(__dir__, "apt", "build.sh")
    file apt_build_sh => apache_arrow_apt_build_sh do |task|
      cp(apache_arrow_apt_build_sh,
         task.name)
    end
    namespace :apt do
      task :build => apt_build_sh
    end
  end

  def define_apt_keyring_build_sh_task
    version = "2019.09.27"
    @archive_name = "groonga-keyring-#{version}.tar.gz"
    @original_archive_name = @archive_name
    file @original_archive_name do
      p "A"
    end
    apache_arrow_apt_build_sh =
      File.join(@apache_arrow_repository,
                "dev",
                "tasks",
                "linux-packages",
                "apt",
                "build.sh")
    apt_build_sh = File.join(__dir__, "apt", "build.sh")
    file apt_build_sh => apache_arrow_apt_build_sh do |task|
      p apache_arrow_apt_build_sh
      cp(apache_arrow_apt_build_sh,
         task.name)
    end
    basename = "groonga-keyring-#{version}"
    p "C"
    FileUtils.rm_rf(basename)
    FileUtils.mkdir_p(basename)
    p "D"
    gpg_uid_path = File.join(__dir__, "..", "gpg_uid")
    gpg_rsa4096_uid_path = File.join(__dir__, "..", "gpg_uid_rsa4096")
    gpg_uid = File.read(gpg_uid_path).chomp
    gpg_rsa4096_uid = File.read(gpg_rsa4096_uid_path).chomp
    sh("gpg --armor --export #{gpg_uid} > #{basename}/groonga-keyring.gpg")
    sh("gpg --armor --export #{gpg_rsa4096_uid} > #{basename}/groonga-keyring-rsa4096.gpg")
    sh("gpg", "--no-default-keyring", "--keyring", "./#{basename}/groonga-archive-keyring.gpg",
       "--import", "#{basename}/groonga-keyring.gpg")
    sh("gpg", "--no-default-keyring", "--keyring", "./#{basename}/groonga-archive-keyring.gpg",
       "--import", "#{basename}/groonga-keyring-rsa4096.gpg")
    p "D"
    sh("tar", "czvf", "#{basename}.tar.gz", "#{basename}/groonga-archive-keyring.gpg")

    namespace :apt do
      namespace :keyring do
        p "Z"
        desc "Build groonga-keyring package"
        task :build => apt_build_sh
      end
    end
  end

  def define_yum_build_sh_task
    apache_arrow_yum_build_sh =
      File.join(@apache_arrow_repository,
                "dev",
                "tasks",
                "linux-packages",
                "yum",
                "build.sh")
    yum_build_sh = File.join(__dir__, "yum", "build.sh")
    file yum_build_sh => apache_arrow_yum_build_sh do |task|
      cp(apache_arrow_yum_build_sh,
         task.name)
    end
    yum_spec_in_file = File.join(__dir__, "groonga.spec.in")
    original_spec_in_file = File.join(__dir__, "rpm", "centos", "groonga.spec.in")
    file yum_spec_in_file => original_spec_in_file do |task|
      cp(original_spec_in_file,
         task.name)
    end
    namespace :yum do
      task :build => yum_build_sh
    end
  end
end

task = GroongaPackageTask.new(apache_arrow_repository)
task.define
